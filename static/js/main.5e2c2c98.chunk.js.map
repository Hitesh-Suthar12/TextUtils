{"version":3,"sources":["components/Navbar.js","components/TextFrom.js","components/About.js","components/Alert.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","_ref","title","mode","aboutText","toggleMode","React","createElement","className","concat","href","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","role","aria-checked","htmlFor","TextFrom","props","_useState","useState","_useState2","_slicedToArray","text","setText","darkModeColors","Fragment","style","color","heading","rows","placeholder","value","onChange","event","target","backgroundColor","disabled","trim","newtext","toUpperCase","showAlert","navigator","clipboard","writeText","newText","split","join","msg","SpeechSynthesisUtterance","window","speechSynthesis","speak","Math","ceil","length","About","memo","height","alert","word","lower","toLowerCase","charAt","slice","capitalize","data-bs-dismiss","Footer","class","App","setMode","_useState3","_useState4","setAlert","Message","setTimeout","document","body","Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.5e2c2c98.chunk.js","sourcesContent":["import React from \"react\";\n// import { Link } from \"react-router-dom\";\n\nfunction Navbar({ title, aboutText, mode, toggleMode }) {\n  return (\n    <nav className={`navbar navbar-expand-lg navbar-${mode} bg-${mode}`}>\n      <div className=\"container-fluid\">\n        {/* <a className=\"navbar-brand\" href=\"#\"> */}\n        <a className=\"navbar-brand\" href=\"/\">\n          {/* <Link className=\"navbar-brand\" to=\"/\"> */}\n          {title}\n        </a>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n            <li className=\"nav-item\">\n              {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\n                Home\n              </Link> */}\n              {/* <a className=\"nav-link\" aria-current=\"page\" href=\"#\"> */}\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">\n                Home\n              </a>\n            </li>\n            <li className=\"nav-item\">\n              {/* <Link className=\"nav-link\" aria-disabled=\"true\" to=\"/about\">\n                {aboutText}\n              </Link> */}\n            </li>\n          </ul>\n\n          {/* <form className=\"d-flex\" role=\"search\">\n            <input\n              className=\"form-control me-2\"\n              type=\"search\"\n              placeholder=\"Search\"\n              aria-label=\"Search\"\n            />\n            <button className=\"btn btn-outline-success\" type=\"submit\">\n              Search\n            </button>\n          </form> */}\n\n          <div\n            className={`form-check form-switch mx-2 my-3 text-${\n              mode === \"light\" ? \"dark\" : \"light\"\n            }`}\n            onClick={toggleMode}\n            role=\"switch\"\n            aria-checked={mode === \"dark\" ? \"true\" : \"false\"}\n          >\n            <input\n              className=\"form-check-input\"\n              type=\"checkbox\"\n              id=\"flexSwitchCheckDefault\"\n            />\n            <label\n              className=\"form-check-label\"\n              htmlFor=\"flexSwitchCheckDefault\"\n            >\n              {mode === \"dark\" ? \"light\" : \"dark\"} Mode\n            </label>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nexport default Navbar;\n","import React, { useState } from \"react\";\n\nexport default function TextFrom(props) {\n  const [text, setText] = useState(\"\");\n\n  const handleOnClick = () => {\n    // console.log(\"UpperCase btn Clicked\" + text);\n    let newtext = text.toUpperCase();\n    setText(newtext);\n    props.showAlert(\"Converted to uppercase!\", \"success\");\n  };\n\n  // function for clear the text\n  const onClear = () => {\n    let cleartext = \"\";\n    setText(cleartext);\n    props.showAlert(\"All text has been cleared!\", \"success\");\n  };\n\n  // function for  Speak the words you write\n  const speak = () => {\n    let msg = new SpeechSynthesisUtterance();\n    msg.text = text;\n    window.speechSynthesis.speak(msg);\n    props.showAlert(\"Listen carefully!\", \"success\");\n  };\n\n  const handleOnChange = (event) => {\n    // console.log(\"On Change\");\n    setText(event.target.value);\n  };\n\n  // function for Remove extra spaces\n  const handleExtraSpace = () => {\n    let newText = text.split(/[ ]+/);\n    setText(newText.join(\" \"));\n    props.showAlert(\"Extra Spaces removed!\", \"success\");\n  };\n\n  // function for copy text\n  const handleCopy = () => {\n    navigator.clipboard.writeText(text);\n    props.showAlert(\"Copied all selected text!\", \"success\");\n  };\n\n  const darkModeColors = {\n    background: \"#0c070c\",\n    text: \"#FFFFFF\",\n    primary: \"#3498db\",\n    secondary: \"#2ecc71\",\n  };\n\n  return (\n    <>\n      <div\n        className=\"container\"\n        style={{ color: props.mode === \"dark\" ? darkModeColors.text : \"black\" }}\n      >\n        <div className=\"mb-3 \">\n          <h2 className=\"h4 pb-1 mb-4 border-bottom border-primary\">\n            <label htmlFor=\"myBox\" className=\"form-label\">\n              {props.heading}\n            </label>\n          </h2>\n          <textarea\n            className=\"form-control\"\n            id=\"myBox\"\n            rows=\"6\"\n            placeholder=\"Enter Your Text ...\"\n            value={text}\n            onChange={handleOnChange}\n            style={{\n              backgroundColor:\n                props.mode === \"dark\" ? darkModeColors.background : \"white\",\n              color: props.mode === \"dark\" ? darkModeColors.text : \"black\",\n            }}\n          ></textarea>\n        </div>\n\n        <button\n          disabled={text.trim() === \"\"}\n          className=\"btn btn-outline-primary mx-2 my-2\"\n          onClick={handleOnClick}\n        >\n          Convert to UPPERCASE\n        </button>\n\n        <button\n          disabled={text.trim() === \"\"}\n          className=\"btn btn-outline-primary my-2 mx-2\"\n          onClick={handleCopy}\n        >\n          {\" \"}\n          Copy Text\n        </button>\n\n        <button\n          disabled={text.trim() === \"\"}\n          className=\"btn btn-outline-primary my-2 mx-2\"\n          onClick={handleExtraSpace}\n        >\n          {\" \"}\n          Remove ExtraSpace\n        </button>\n\n        <button\n          disabled={text.trim() === \"\"}\n          className=\"btn btn-outline-primary my-2 mx-2\"\n          type=\"submit\"\n          onClick={speak}\n        >\n          {\" \"}\n          Speak\n        </button>\n        <button\n          disabled={text.trim() === \"\"}\n          className=\"btn btn-outline-danger my-2 mx-2\"\n          onClick={onClear}\n        >\n          {\" \"}\n          Clear All\n        </button>\n      </div>\n\n      <div\n        className=\"container my-3\"\n        style={{ color: props.mode === \"dark\" ? darkModeColors.text : \"black\" }}\n      >\n        {/* <h4 className=\"p-2 bg-info bg-opacity-10 border border-info border-start-0 rounded-end\">\n          Text Summary\n        </h4> */}\n        <h2 className=\"h4 pb-1 mb-4 border-bottom border-primary\">\n          <label htmlFor=\"myBox\" className=\"form-label\">\n            Text Summary\n          </label>\n        </h2>\n\n        <button type=\"button\" className=\"btn btn-outline-secondary mb-2\">\n          Estimsted time to read all the words takes{\" \"}\n          <span className=\"badge text-bg-primary\">\n            {text.trim() === \"\"\n              ? 0\n              : Math.ceil(0.08 * text.trim().split(\" \").length)}\n          </span>{\" \"}\n          minutes{\" \"}\n        </button>\n\n        <ol\n          className=\"list-group list-group-numbered\"\n          style={{\n            backgroundColor:\n              props.mode === \"dark\" ? darkModeColors.background : \"white\",\n            color: props.mode === \"dark\" ? darkModeColors.text : \"black\",\n          }}\n        >\n          <li\n            className=\"list-group-item d-flex justify-content-between align-items-start\"\n            style={{\n              backgroundColor:\n                props.mode === \"dark\" ? darkModeColors.background : \"white\",\n              color: props.mode === \"dark\" ? darkModeColors.text : \"black\",\n            }}\n          >\n            <div className=\"ms-2 me-auto\">\n              <div className=\"fw-bold\">Words</div>Your text contain number of\n              words\n            </div>\n            <span className=\"badge bg-primary rounded-pill\">\n              {text.trim() === \"\" ? 0 : text.trim().split(/\\s+/).length}\n            </span>\n          </li>\n          <li\n            className=\"list-group-item d-flex justify-content-between align-items-start\"\n            style={{\n              backgroundColor:\n                props.mode === \"dark\" ? darkModeColors.background : \"white\",\n              color: props.mode === \"dark\" ? darkModeColors.text : \"black\",\n            }}\n          >\n            <div className=\"ms-2 me-auto\">\n              <div className=\"fw-bold\">Charactors</div>\n              Your text contain number of Charactor\n            </div>\n            <span className=\"badge bg-primary rounded-pill\">\n              {text.trim() === \"\" ? 0 : text.length}\n            </span>\n          </li>\n        </ol>\n\n        <div className=\"card text-right mt-3\">\n          <div\n            className=\"card-body\"\n            style={{\n              backgroundColor:\n                props.mode === \"dark\" ? darkModeColors.background : \"white\",\n              color: props.mode === \"dark\" ? darkModeColors.text : \"black\",\n            }}\n          >\n            <h4 className=\"card-title\">Preview</h4>\n            <p className=\"card-text\">\n              {text.length > 0\n                ? text\n                : \"Please Type in text box for Preview here...\"}\n            </p>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\n// import React, { useState } from \"react\";\n\nexport default function About(props) {\n  // const [myStyle, setMyStyle] = useState({\n  //   color: \"white\",\n  //   backgroundColor: \"black\",\n  // });\n\n  const darkModeColors = {\n    background: \"#0c070c\",\n    text: \"#FFFFFF\",\n    primary: \"#3498db\",\n    secondary: \"#2ecc71\",\n  };\n\n  return (\n    <div\n      className=\"container\"\n      style={{ color: props.mode === \"dark\" ? darkModeColors.text : \"black\" }}\n    >\n      <h2 className=\"h3 pb-1 mb-3 mt-4 border-bottom border-primary\">\n        <label htmlFor=\"myBox\" className=\"form-label\">\n          About\n        </label>\n      </h2>\n      <div\n        className=\"accordion mb-3\"\n        id=\"accordionPanelsStayOpenExample\"\n        style={{\n          backgroundColor:\n            props.mode === \"dark\" ? darkModeColors.background : \"white\",\n          color: props.mode === \"dark\" ? darkModeColors.text : \"black\",\n        }}\n      >\n        <div\n          className=\"accordion-item\"\n          style={{\n            backgroundColor:\n              props.mode === \"dark\" ? darkModeColors.background : \"white\",\n            color: props.mode === \"dark\" ? darkModeColors.text : \"black\",\n          }}\n        >\n          <h2 className=\"accordion-header\">\n            <button\n              className=\"accordion-button\"\n              style={{\n                backgroundColor:\n                  props.mode === \"dark\" ? darkModeColors.background : \"white\",\n                color: props.mode === \"dark\" ? darkModeColors.text : \"black\",\n              }}\n              type=\"button\"\n              data-bs-toggle=\"collapse\"\n              data-bs-target=\"#panelsStayOpen-collapseOne\"\n              aria-expanded=\"true\"\n              aria-controls=\"panelsStayOpen-collapseOne\"\n            >\n              <strong>Analyze Your text</strong>\n            </button>\n          </h2>\n          <div\n            id=\"panelsStayOpen-collapseOne\"\n            className=\"accordion-collapse collapse show\"\n          >\n            <div className=\"accordion-body\">\n              TextUtils gives you a way to analyze your text quickly and\n              efficiently. Be it word count, Charactor count or reading time.\n            </div>\n          </div>\n        </div>\n        <div\n          className=\"accordion-item\"\n          style={{\n            backgroundColor:\n              props.mode === \"dark\" ? darkModeColors.background : \"white\",\n            color: props.mode === \"dark\" ? darkModeColors.text : \"black\",\n          }}\n        >\n          <h2 className=\"accordion-header\">\n            <button\n              className=\"accordion-button collapsed\"\n              style={{\n                backgroundColor:\n                  props.mode === \"dark\" ? darkModeColors.background : \"white\",\n                color: props.mode === \"dark\" ? darkModeColors.text : \"black\",\n              }}\n              type=\"button\"\n              data-bs-toggle=\"collapse\"\n              data-bs-target=\"#panelsStayOpen-collapseTwo\"\n              aria-expanded=\"false\"\n              aria-controls=\"panelsStayOpen-collapseTwo\"\n            >\n              <strong>Free to use</strong>\n            </button>\n          </h2>\n          <div\n            id=\"panelsStayOpen-collapseTwo\"\n            className=\"accordion-collapse collapse\"\n          >\n            <div\n              className=\"accordion-body\"\n              style={{\n                backgroundColor:\n                  props.mode === \"dark\" ? darkModeColors.background : \"white\",\n                color: props.mode === \"dark\" ? darkModeColors.text : \"black\",\n              }}\n            >\n              TextUtils is a free Charactor counter tool that provides instant\n              Charactor count & word count statistics for a given text.\n              TextUtils reports the number of words and Charactor. Thus it is\n              suitable for writing text with word / Charactor limit.\n            </div>\n          </div>\n        </div>\n        <div\n          className=\"accordion-item\"\n          style={{\n            backgroundColor:\n              props.mode === \"dark\" ? darkModeColors.background : \"white\",\n            color: props.mode === \"dark\" ? darkModeColors.text : \"black\",\n          }}\n        >\n          <h2 className=\"accordion-header\">\n            <button\n              className=\"accordion-button collapsed\"\n              style={{\n                backgroundColor:\n                  props.mode === \"dark\" ? darkModeColors.background : \"white\",\n                color: props.mode === \"dark\" ? darkModeColors.text : \"black\",\n              }}\n              type=\"button\"\n              data-bs-toggle=\"collapse\"\n              data-bs-target=\"#panelsStayOpen-collapseThree\"\n              aria-expanded=\"false\"\n              aria-controls=\"panelsStayOpen-collapseThree\"\n            >\n              <strong>Browser Compatible</strong>\n            </button>\n          </h2>\n          <div\n            id=\"panelsStayOpen-collapseThree\"\n            className=\"accordion-collapse collapse\"\n          >\n            <div className=\"accordion-body\">\n              This word counter software work in any web browser such as Chrome,\n              Firefox, Interet Explorer, Safari, Opera etc. It suits to count\n              Charactor in facebook, blog, books, excel document, pdf document,\n              essays etc.\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* <div className=\"container\">\n        <button\n          onClick={toggleStyle}\n          type=\"button\"\n          className=\"btn btn-dark my-3\"\n          style={myStyle}\n        >\n          {btnText}\n        </button>\n      </div> */}\n    </div>\n  );\n}\n","import React, { memo } from \"react\";\n\nexport default memo(function Alert(props) {\n  const capitalize = (word) => {\n    const lower = word.toLowerCase();\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\n  };\n\n  return (\n    // this happens bcz all the JSX will be converted to JavaScript Calls!\n    <div style={{ height: \"50px\" }}>\n      {props.alert && (\n        <div\n          className={`alert alert-${props.alert.type} alert-dismissible fade show`}\n          role=\"alert\"\n        >\n          <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\n          <button\n            type=\"button\"\n            className=\"btn-close\"\n            data-bs-dismiss=\"alert\"\n            aria-label=\"Close\"\n          ></button>\n        </div>\n      )}\n    </div>\n  );\n});\n","import React from \"react\";\n\nexport default function Footer(mode, props) {\n  return (\n    <div>\n      <div className=\"container\">\n        <footer class=\"footer bg-dark text-light fixed-bottom pt-3\">\n          <div class=\"container text-center\">\n            <p>&copy; 2023 Text Utils By Hitesh Suthar</p>\n          </div>\n        </footer>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextFrom from \"./components/TextFrom\";\nimport About from \"./components/About\";\nimport { useState } from \"react\";\nimport Alert from \"./components/Alert\";\nimport Footer from \"./components/Footer\";\n// import { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (Message, type) => {\n    setAlert({\n      msg: Message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#11101c\";\n      showAlert(\"Dark mode has been enabled!\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has been enabled!\", \"success\");\n    }\n  };\n\n  return (\n    <>\n      {/* <BrowserRouter> */}\n      <Navbar\n        title=\"TextUtils\"\n        aboutText=\"About me\"\n        mode={mode}\n        toggleMode={toggleMode}\n      />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n        {/* <Routes> Wrap your Route components with Routes */}\n        {/* <Route exact path=\"/about\" element={<About mode={mode}/>} /> */}\n        {/* <Route exact path=\"/\" element={<TextFrom heading=\"Enter Your Text and click on Button to Modified\" mode={mode} showAlert={showAlert} />} /> */}\n        <TextFrom\n          heading=\"TextUtils - Word Counter | Charactor Counter | Remove ExtraSpaces | Copy | Speak Word\"\n          mode={mode}\n          showAlert={showAlert}\n        />\n        {/* </Routes> */}\n        <About mode={mode} />\n        <Footer mode={mode} />\n      </div>\n      {/* </BrowserRouter> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}